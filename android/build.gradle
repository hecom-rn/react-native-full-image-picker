apply plugin: 'com.android.library'

def safeExtGet(prop, fallback) {
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

def DEFAULT_COMPILE_SDK_VERSION = 34
def DEFAULT_TARGET_SDK_VERSION = 34
def DEFAULT_MIN_SDK_VERSION = 19
def GLIDE_VERSION = safeExtGet("glideVersion", "4.15.1")
def PICTURE_VERSION = safeExtGet("pictureVersion", "v3.11.3")
buildscript {
    repositories {
        maven { url "https://maven.aliyun.com/nexus/content/groups/public/" }
        maven {
            url 'https://maven.aliyun.com/nexus/content/repositories/releases'
        }
        maven {
            url 'https://maven.aliyun.com/repository/public/'
        }
        maven {
            allowInsecureProtocol = true
            url 'http://nexus-hqtn.hecom.cn/repository/android-public/'
        }
        maven {
            allowInsecureProtocol = true
            url 'http://nexus-hqtn.hecom.cn/repository/maven-public/'
        }
        maven { url 'https://www.jitpack.io' }
        jcenter()
        google()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.4.2'
    }
}

android {
    compileSdkVersion rootProject.hasProperty('compileSdkVersion') ? rootProject.compileSdkVersion : DEFAULT_COMPILE_SDK_VERSION

    defaultConfig {
        minSdkVersion rootProject.hasProperty('minSdkVersion') ? rootProject.minSdkVersion : DEFAULT_MIN_SDK_VERSION
        targetSdkVersion rootProject.hasProperty('targetSdkVersion') ? rootProject.targetSdkVersion : DEFAULT_TARGET_SDK_VERSION
        versionCode 1
    }
    lintOptions {
        abortOnError false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation 'com.facebook.react:react-native:+'
    implementation "com.hecom.lib:pictureselector:${PICTURE_VERSION}"
    implementation "com.github.bumptech.glide:glide:${GLIDE_VERSION}"
}
